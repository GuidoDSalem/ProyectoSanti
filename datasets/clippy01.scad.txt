// Clippy Figurine

// Copyright Algot Runeman, 2018
//    This program is free software: you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

//    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

//    You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
// version00 - 2018-02-02 - Yes! I know the real thing had no feet
// version01 - 2018-02-02 - inverted clip with added curls
// much word applied to overlap to avoid 2-manifold errors

//VIEWPORT SETTINGS
$vpt=[0,0,30];
$vpr=[90,0,0];
$vpd=200;
$fn=30;

// OBJECT MODULES
module end1(){
    // large outer end
    difference(){
rotate_extrude(convexity=10)
translate([10.5,0,0])
circle(r=2, center=false);
    translate([-25,0,-3])
        cube([50,50,6]);
    }
}
module end2(){
        difference(){
rotate_extrude(convexity=10)
translate([5.5,0,0])
circle(r=2, center=false);
    translate([-25,0,-3])
        cube([50,50,6]);
    }
    }
module end3(){
        difference(){
rotate_extrude(convexity=10)
translate([8,0,0])
circle(r=2, center=false);
    translate([-25,0,-3])
        cube([50,50,6]);
    }
    }
    
    module hook(){
    // small hook segment
    intersection(){
end3();
    translate([10,0,0])
    rotate([0,0,-30])
    cube ([10,10,10], center=true);
        }
        } 

    module clip(){
translate([-.50,0,-20])
rotate([90,0,0])
end1();

// outer short cylinder
translate([-11,0,-21])
cylinder(16.3,2,2);

translate([2,0,15])
rotate([270,0,0])
end3();
        
// inner long cylinder
translate([-6,0,-24])
cylinder(40,2,2);
    
    //inner bottom loop
    translate([-.5,0,-22])
rotate([90,0,0])
end2();

    // inner short cylinder
    translate([5,0,-23.1])
    cylinder(13.3,2,2);
    
    //outer long cylinder
    translate([10,0,-21])
    cylinder(37,2,2);
    
    // small hook inner
        translate([-3,0,-10.2])
        rotate([90,180,180])
        hook();
    // small hook outer
        translate([-19,0,-6])
        rotate([90,180,180])
        hook();
    } // end clip

   // eye
   module eye(){
       difference(){
   sphere(4);
           translate([0,-4,0])
           sphere(2);
       }
   translate([0,3,0])
   scale([2,1,1])
   sphere(5);
   translate([0,2,2])
   scale([2.5,1.5,1])
   cylinder(3,4,4);
       translate([0,2,5])
       scale([3.3,1.9,1])
       sphere(3);
   }
   
   // foot
   module foot(){
   translate([0,-9,0])
   cylinder(2,5.2,5.2);
   translate([0,0,0])
   cylinder(2,4.1,4.1);
   hull(){
       translate([0,-9,3])
       scale([1,1,.6])
       sphere(5);
              translate([0,0,3])
       scale([1,1,.6])
       sphere(4);
   }
   }
   
   // supports
   module support(){
       translate([-1,-2,0])
       scale([1,2,1])
       cylinder(2,3,3);
       // under clip loop
       hull(){
       translate([-3,-1,0])
       cube([5,2,1]);
       translate([-2,-.25,10.1])
       cube([4,.5,1]);
       }
       // under right eye
       hull(){
       translate([-3,-5,0])
       cube([3,2,1]);
       translate([-14,-3.5,41.1])
       cube([5,.5,1]);
       }
       // under left eye
       hull(){
              translate([-3,-5,0])
       cube([3,2,1]);
       translate([10,-3.5,41.1])
       cube([5,.5,1]);
       }
   }
   
   // EXECUTE THE OBJECT
   support();
 // clip body
     translate([0,0,40])
     rotate([180,180,0])
     clip();

// clippy's right foot
     translate([-9,0,0])
     rotate([0,0,-10])
     foot();
// clippy's right leg
     translate([-10,0,2])
     rotate([0,10,0])
     cylinder(12,2,2);
// clippy's left foot
     translate([7,0,0])
     rotate([0,0,10])
     foot();
// clippy's left leg
     translate([8,0,2])
     rotate([0,-15,0])
     cylinder(9,2,2);
// eyes
     translate([-10,-5,47])
     rotate([-20,-10,0])
     eye();
     translate([10,-5,47])
     rotate([-20,10,0])
     eye();