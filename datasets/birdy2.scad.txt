///////////////////////////
//  Cartoon Bird  //
//////////////////////////
// 2020-10-22
// v2 -  2020-10-23 add wings and smooth tail
// long render time can be reduced by using auto smooth $fn instead of 30 or more

// LICENSE

// Copyright Algot Runeman, 2020
//    This program is free software: you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

//    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

//    You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.

// VARIABLES
// $fn=30;
// unusually, no effort has been made to use parametric design

// MODULES

module eyeball(){
    difference(){
    sphere(4);
    translate ([4,0,0])
    sphere(2);
    }
}
module nostril() {cylinder(5,1,.5);}
module beak(){
module beaktop(){
    intersection(){
    translate([0,-5,0])
    cube([10,10,10]);
    scale([2,.8,1]) sphere(5);
} // end intersection
} // end beaktop
difference(){
beaktop();
    translate([2,-1,2.5]) 
    rotate([90,0,45])
    nostril();
    translate([2,1,2.5]) 
    rotate([-90,0,-45])
    nostril();
}
rotate([180,0,0])
scale([.9,.8,.8])
rotate([0,-10,0])
beaktop();
} // end beak module

module crestfeather(){
    difference(){
    scale([.5,2,1])
    sphere(5);
translate([-2.5,0,-5])
    scale([1,3,1])
cylinder(10,4,4);
}
} // end crestfeather

module crestfeather2(){
    translate([0,10,0])
    rotate([0,-90,0])
    difference(){
    scale([.5,2,1])
    sphere(5);
translate([-2.5,0,-5])
    scale([1,3,1])
cylinder(10,4,4);
}
}
// wing or tail
module wing(){
for( k=[-30:10:50]){
rotate([0,0,k])
crestfeather2();
}
}

// EXECUTION SECTION

// head
sphere(10);
translate([8,0,0])
beak();
translate([5,-5,3])
rotate([0,0,-30])
eyeball();
translate([5,5,3])
rotate([0,0,30])
eyeball();

// Feather Crest on Head

for (k=[-50:15:30]){
translate ([k*.1,0,10])
rotate([90,k,0])
crestfeather();
}
// Body
hull(){
sphere(7);
    difference(){
    translate([-15,0,-10])
    sphere(15);
        translate([-25,-10,-30])
      cube([20,20,10]);
    }
}

// wing left
translate([-10,5,0])
rotate([-30,0,0])
scale([1,2.1,1])
wing();

// wing right
translate([-10,-5,0])
rotate([30,0,0])
scale([1,2.1,1])
mirror([0,1,0])wing();

// tail
translate([-27,0,-15])
rotate([-17,0,80])
wing();